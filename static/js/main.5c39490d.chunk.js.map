{"version":3,"sources":["reducers/lists.js","constants.js","reducers/tasks.js","reducers/boards.js","reducers/user.js","store.js","reducers/currentTask.js","reducers/currentList.js","reducers/index.js","actions/actionCreator.js","utilities/api/index.js","components/button/button.jsx","components/todo/todo-header.jsx","ItemTypes.js","components/todo/todo-item.jsx","components/todo/todo-list.jsx","components/portal/portal.jsx","components/modal/modal.jsx","components/todo/modal-add-list.jsx","components/todo/modal-add-task.jsx","components/todo/modal-add-board.jsx","components/todo/modal-task-info.jsx","components/todo/modal-list-info.jsx","components/todo/modal-sign-up.jsx","components/todo/modal-log-in.jsx","components/todo/boards-list.jsx","components/todo/todo.jsx","App.js","index.js"],"names":["LISTS","lists","state","payload","type","listId","title","boardId","newId","filter","map","list","id","listBody","TASKS","tasks","checked","task","taskId","taskBody","BOARDS","boards","board","boardBody","USER","load","namespace","user","token","undefined","refreshToken","preloadedState","currentTask","currentList","rootReducer","combineReducers","composeEnhancers","compose","store","createStore","applyMiddleware","save","thunk","setUserToken","setUserId","setUserRefreshToken","FIREBASE_API_KEY","FIREBASE_DB","isExist","obj","isTokenExpired","res","error","isRefreshTokenCooldown","dispatch","getState","setTimeout","fetch","method","body","JSON","stringify","grant_type","refresh_token","then","json","id_token","efresh_token","fetchTasks","fetchLists","fetchBoards","Object","entries","Button","children","onClick","className","invert","classes","classNames","defaultProps","small","window","innerWidth","Header","ToDoItem","checkTask","removeTask","onTaskClick","useDrag","item","itemId","ItemTypes","collect","monitor","isDragging","drag","style","opacity","ref","ToDoList","onAddTask","removeList","onItemDrop","onOpenListInfo","useDrop","accept","drop","isOver","canDrop","plusBackground","key","background","Portal","el","document","createElement","appendChild","this","removeChild","props","ReactDOM","createPortal","Component","Modal","accepting","onAccept","onCancel","isOpen","e","persist","target","indexOf","ModalAddList","useState","inputValue","setInputValue","value","onChange","ModalAddTask","ModalAddBoard","ModalTaskInfo","onClose","onEditTitle","fetchTask","setTitle","useEffect","ModalListInfo","fetchList","ModalSignUp","onSubmit","inputEmail","setInputEmail","inputPass","setInputPass","inputRePass","setInputRePass","preventDefault","length","email","password","alert","placeholder","ModalLogIn","BoardsList","setCurrentBoard","onAddBoard","onDeleteBoard","setIsOpen","toggleIsOpen","opened","hidden","index","mapTasksDispatchToProps","addTask","temporaryId","name","editTaskId","targetTaskCheckedStatus","find","moveTask","deleteTasksLocal","editTaskTitle","addTaskLocal","removeTaskLocal","checkTaskLocal","moveTaskLocal","editTaskTitleLocal","mapListsDispatchToProps","addList","editListId","forEach","deleteTasks","editListTitle","addListLocal","removeListLocal","editListTitleLocal","mapBoardsDispatchToProps","addBoard","removeBoard","addBoardLocal","removeBoardLocal","mapOtherDispatchToProps","registerUser","idToken","localId","loginUser","returnSecureToken","logoutUser","mapDispatchToProps","connect","isOpenModalAddList","setIsOpenModalAddList","isOpenModalAddTask","setIsOpenModalAddTask","isOpenModalAddBoard","setIsOpenModalAddBoard","isOpenModalTaskInfo","setIsOpenModalTaskInfo","isOpenModalListInfo","setIsOpenModalListInfo","isOpenModalSignUp","setIsOpenModalSignUp","isOpenModalLogIn","setIsOpenModalLogIn","currentTaskId","setCurrentTaskId","currentListId","setCurrentListId","currentBoard","toggleModalAddListView","toggleModalAddTaskView","toggleModalAddBoardView","toggleModalTaskInfoView","toggleModalListInfoView","toggleModalSignUpView","toggleModalLogInView","handleItemDrop","setItemListId","handleAddTask","handleRemoveList","handleRemoveTask","handleTaskClick","handleOpenListInfo","handleCheckTask","isLogged","String","Date","now","App","DndProvider","backend","Backend","render","getElementById"],"mappings":"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","file":"static/js/main.5c39490d.chunk.js","sourcesContent":["import {\r\n  ADD_LIST, REMOVE_LIST, EDIT_LIST_TITLE, SET_LISTS, EDIT_LIST_ID,\r\n} from '../constants';\r\n\r\nconst LISTS = {\r\n  lists: [],\r\n};\r\n\r\nconst lists = (state = LISTS.lists, payload) => {\r\n  const {\r\n    type, listId, title, boardId, lists, newId,\r\n  } = payload;\r\n  switch (type) {\r\n    case ADD_LIST:\r\n      return [\r\n        ...state,\r\n        [\r\n          listId,\r\n          {\r\n            title,\r\n            boardId,\r\n          },\r\n        ],\r\n      ];\r\n    case REMOVE_LIST:\r\n      return [...state].filter(([id]) => id !== listId);\r\n    case EDIT_LIST_TITLE:\r\n      return state.map((list) => {\r\n        const id = list[0];\r\n        const listBody = list[1];\r\n        if (id === listId) {\r\n          return [id, {\r\n            ...listBody,\r\n            title,\r\n          }];\r\n        }\r\n        return list;\r\n      });\r\n    case EDIT_LIST_ID:\r\n      return state.map((list) => {\r\n        const id = list[0];\r\n        const listBody = list[1];\r\n        if (id === listId) {\r\n          return [\r\n            newId,\r\n            listBody,\r\n          ];\r\n        }\r\n        return list;\r\n      });\r\n    case SET_LISTS:\r\n      return lists;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default lists;\r\n","export const ADD_TASK = 'ADD_TASK';\r\nexport const CHECK_TASK = 'CHECK_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const MOVE_TASK = 'MOVE_TASK';\r\nexport const DELETE_TASKS = 'DELETE_TASKS';\r\nexport const EDIT_TASK_TITLE = 'EDIT_TASK_TITLE';\r\nexport const SET_TASKS = 'SET_TASKS';\r\nexport const SET_CURRENT_TASK = 'SET_CURRENT_TASK';\r\nexport const EDIT_TASK_ID = 'EDIT_TASK_ID';\r\n\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const REMOVE_LIST = 'REMOVE_LIST';\r\nexport const EDIT_LIST_TITLE = 'EDIT_LIST_TITLE';\r\nexport const SET_LISTS = 'SET_LISTS';\r\nexport const SET_CURRENT_LIST = 'SET_CURRENT_LIST';\r\nexport const EDIT_LIST_ID = 'EDIT_LIST_ID';\r\n\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const REMOVE_BOARD = 'REMOVE_BOARD';\r\nexport const SET_BOARDS = 'SET_BOARDS';\r\nexport const EDIT_BOARD_ID = 'EDIT_BOARD_ID';\r\n\r\nexport const SET_USER_TOKEN = 'SET_USER_TOKEN';\r\nexport const SET_USER_ID = 'SET_USER_ID';\r\nexport const SET_USER_REFRESH_TOKEN = 'SET_USER_REFRESH_TOKEN';\r\n\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\n","import {\r\n  ADD_TASK,\r\n  REMOVE_TASK,\r\n  CHECK_TASK,\r\n  MOVE_TASK,\r\n  DELETE_TASKS,\r\n  EDIT_TASK_TITLE,\r\n  SET_TASKS,\r\n  EDIT_TASK_ID,\r\n} from '../constants';\r\n\r\nconst TASKS = {\r\n  tasks: [],\r\n};\r\n\r\nconst tasks = (state = TASKS.tasks, payload) => {\r\n  const {\r\n    type, listId, id, title, checked, tasks, newId,\r\n  } = payload;\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return [\r\n        ...state, [id, {\r\n          listId,\r\n          title,\r\n          checked,\r\n        }],\r\n      ];\r\n    case REMOVE_TASK:\r\n      return state.filter((task) => {\r\n        const taskId = task[0];\r\n        return taskId !== id;\r\n      });\r\n    case CHECK_TASK:\r\n      return state.map((task) => {\r\n        const taskId = task[0];\r\n        const taskBody = task[1];\r\n        if (taskId === id) {\r\n          return [taskId, {\r\n            ...taskBody,\r\n            checked: !taskBody.checked,\r\n          }];\r\n        }\r\n        return task;\r\n      });\r\n    case MOVE_TASK:\r\n      return state.map((task) => {\r\n        const taskId = task[0];\r\n        const taskBody = task[1];\r\n        if (taskId === id) {\r\n          return [taskId, {\r\n            ...taskBody,\r\n            listId,\r\n          }];\r\n        }\r\n        return task;\r\n      });\r\n    case EDIT_TASK_TITLE:\r\n      return state.map((task) => {\r\n        const taskId = task[0];\r\n        const taskBody = task[1];\r\n        if (taskId === id) {\r\n          return [taskId, {\r\n            ...taskBody,\r\n            title,\r\n          }];\r\n        }\r\n        return task;\r\n      });\r\n    case EDIT_TASK_ID:\r\n      return state.map((task) => {\r\n        const taskId = task[0];\r\n        const taskBody = task[1];\r\n        if (taskId === id) {\r\n          return [newId, {\r\n            ...taskBody,\r\n          }];\r\n        }\r\n        return task;\r\n      });\r\n    case DELETE_TASKS:\r\n      return state.filter(([, body]) => body.listId !== listId);\r\n    case SET_TASKS:\r\n      return tasks;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tasks;\r\n","import {\r\n  ADD_BOARD, REMOVE_BOARD, SET_BOARDS, EDIT_BOARD_ID,\r\n} from '../constants';\r\n\r\nconst BOARDS = {\r\n  boards: [],\r\n};\r\n\r\nconst boards = (state = BOARDS.boards, payload) => {\r\n  const {\r\n    type, title, boardId, boards, newId,\r\n  } = payload;\r\n  switch (type) {\r\n    case ADD_BOARD:\r\n      return [\r\n        ...state,\r\n        [\r\n          boardId,\r\n          {\r\n            title,\r\n          },\r\n        ],\r\n      ];\r\n    case REMOVE_BOARD:\r\n      return [...state].filter(([id]) => id !== boardId);\r\n    case EDIT_BOARD_ID:\r\n      return state.map((board) => {\r\n        const id = board[0];\r\n        const boardBody = board[1];\r\n        if (id === boardId) {\r\n          return [\r\n            newId,\r\n            boardBody,\r\n          ];\r\n        }\r\n        return board;\r\n      });\r\n    case SET_BOARDS:\r\n      return boards;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boards;\r\n","import { load } from 'redux-localstorage-simple';\r\nimport {\r\n  SET_USER_TOKEN, SET_USER_ID, SET_USER_REFRESH_TOKEN, LOGOUT_USER,\r\n} from '../constants';\r\n\r\nconst DATA = load({ namespace: 'todo-data' });\r\nconst USER = DATA.user || {\r\n  token: '',\r\n  id: '',\r\n};\r\nif (!USER.token || USER.token === undefined) {\r\n  USER.token = '';\r\n}\r\nif (!USER.id || USER.id === undefined) {\r\n  USER.id = '';\r\n}\r\nif (!USER.refreshToken || USER.refreshToken === undefined) {\r\n  USER.refreshToken = '';\r\n}\r\nconst user = (state = USER, payload) => {\r\n  const {\r\n    type, token, id, refreshToken,\r\n  } = payload;\r\n  switch (type) {\r\n    case SET_USER_TOKEN:\r\n      return {\r\n        ...state,\r\n        token,\r\n      };\r\n    case SET_USER_ID:\r\n      return {\r\n        ...state,\r\n        id,\r\n      };\r\n    case SET_USER_REFRESH_TOKEN:\r\n      return {\r\n        ...state,\r\n        refreshToken,\r\n      };\r\n    case LOGOUT_USER:\r\n      return {\r\n        ...state,\r\n        id: '',\r\n        token: '',\r\n        refreshToken: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default user;\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { save } from 'redux-localstorage-simple';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers/index';\r\n\r\n/* eslint-disable no-underscore-dangle */\r\nconst composeEnhancers = process.env.NODE_ENV !== 'production'\r\n    && typeof window === 'object'\r\n    && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n/* eslint-enable */\r\n\r\nconst configureStore = (preloadedState) => (\r\n  createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(\r\n      applyMiddleware(save({ namespace: 'todo-data' }), thunk),\r\n    ),\r\n  )\r\n);\r\n\r\nconst store = configureStore({});\r\n\r\nexport default store;\r\n","import { SET_CURRENT_TASK } from '../constants';\r\n\r\nconst currentTask = (state = {}, payload) => {\r\n  const { type, currentTask } = payload;\r\n  switch (type) {\r\n    case SET_CURRENT_TASK:\r\n      return currentTask;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentTask;\r\n","import { SET_CURRENT_LIST } from '../constants';\r\n\r\nconst currentList = (state = {}, payload) => {\r\n  const { type, currentList } = payload;\r\n  switch (type) {\r\n    case SET_CURRENT_LIST:\r\n      return currentList;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentList;\r\n","import { combineReducers } from 'redux';\r\nimport lists from './lists';\r\nimport tasks from './tasks';\r\nimport boards from './boards';\r\nimport user from './user';\r\nimport currentTask from './currentTask';\r\nimport currentList from './currentList';\r\n\r\nconst rootReducer = combineReducers({\r\n  lists,\r\n  tasks,\r\n  boards,\r\n  user,\r\n  currentTask,\r\n  currentList,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {\r\n  ADD_TASK,\r\n  ADD_LIST,\r\n  REMOVE_TASK,\r\n  REMOVE_LIST,\r\n  CHECK_TASK,\r\n  MOVE_TASK,\r\n  DELETE_TASKS,\r\n  ADD_BOARD,\r\n  REMOVE_BOARD,\r\n  EDIT_TASK_TITLE,\r\n  EDIT_LIST_TITLE,\r\n  SET_USER_TOKEN,\r\n  SET_USER_ID,\r\n  SET_USER_REFRESH_TOKEN,\r\n  SET_TASKS,\r\n  SET_BOARDS,\r\n  SET_LISTS,\r\n  SET_CURRENT_TASK,\r\n  SET_CURRENT_LIST,\r\n  EDIT_TASK_ID,\r\n  EDIT_LIST_ID,\r\n  EDIT_BOARD_ID,\r\n  LOGOUT_USER,\r\n} from '../constants';\r\n\r\nexport const addTaskLocal = ({ listId, title, id }) => ({\r\n  type: ADD_TASK,\r\n  listId,\r\n  title,\r\n  id,\r\n  checked: false,\r\n});\r\n\r\nexport const removeTaskLocal = ({ id }) => ({\r\n  type: REMOVE_TASK,\r\n  id,\r\n});\r\n\r\nexport const checkTaskLocal = ({ id }) => ({\r\n  type: CHECK_TASK,\r\n  id,\r\n});\r\n\r\nexport const moveTaskLocal = ({ listId, itemId }) => ({\r\n  type: MOVE_TASK,\r\n  listId,\r\n  id: itemId,\r\n});\r\n\r\nexport const editTaskTitleLocal = ({ id, title }) => ({\r\n  type: EDIT_TASK_TITLE,\r\n  id,\r\n  title,\r\n});\r\n\r\nexport const deleteTasksLocal = ({ listId }) => ({\r\n  type: DELETE_TASKS,\r\n  listId,\r\n});\r\n\r\nexport const setTasks = (tasks) => ({\r\n  type: SET_TASKS,\r\n  tasks,\r\n});\r\n\r\nexport const setCurrentTask = (currentTask) => ({\r\n  type: SET_CURRENT_TASK,\r\n  currentTask,\r\n});\r\n\r\nexport const addListLocal = ({ listId, title, boardId }) => ({\r\n  type: ADD_LIST,\r\n  listId,\r\n  title,\r\n  boardId,\r\n});\r\n\r\nexport const removeListLocal = ({ listId }) => ({\r\n  type: REMOVE_LIST,\r\n  listId,\r\n});\r\n\r\nexport const editListTitleLocal = ({ listId, title }) => ({\r\n  type: EDIT_LIST_TITLE,\r\n  listId,\r\n  title,\r\n});\r\n\r\nexport const setLists = (lists) => ({\r\n  type: SET_LISTS,\r\n  lists,\r\n});\r\n\r\nexport const setCurrentList = (currentList) => ({\r\n  type: SET_CURRENT_LIST,\r\n  currentList,\r\n});\r\n\r\nexport const addBoardLocal = ({ boardId, title }) => ({\r\n  type: ADD_BOARD,\r\n  boardId,\r\n  title,\r\n});\r\n\r\nexport const removeBoardLocal = ({ boardId }) => ({\r\n  type: REMOVE_BOARD,\r\n  boardId,\r\n});\r\n\r\nexport const setBoards = (boards) => ({\r\n  type: SET_BOARDS,\r\n  boards,\r\n});\r\n\r\nexport const setUserToken = (token) => ({\r\n  type: SET_USER_TOKEN,\r\n  token,\r\n});\r\n\r\nexport const setUserId = (id) => ({\r\n  type: SET_USER_ID,\r\n  id,\r\n});\r\n\r\nexport const setUserRefreshToken = (refreshToken) => ({\r\n  type: SET_USER_REFRESH_TOKEN,\r\n  refreshToken,\r\n});\r\n\r\nexport const editTaskId = ({ id, newId }) => ({\r\n  type: EDIT_TASK_ID,\r\n  newId,\r\n  id,\r\n});\r\n\r\nexport const editListId = ({ listId, newId }) => ({\r\n  type: EDIT_LIST_ID,\r\n  newId,\r\n  listId,\r\n});\r\n\r\nexport const editBoardId = ({ boardId, newId }) => ({\r\n  type: EDIT_BOARD_ID,\r\n  boardId,\r\n  newId,\r\n});\r\n\r\nexport const logoutUser = () => ({\r\n  type: LOGOUT_USER,\r\n});\r\n","import {\r\n  setUserToken,\r\n  setUserId,\r\n  setUserRefreshToken,\r\n  setTasks,\r\n  setCurrentTask,\r\n  setLists,\r\n  setCurrentList,\r\n  setBoards,\r\n  editTaskId,\r\n  editListId,\r\n  editBoardId,\r\n} from '../../actions/actionCreator';\r\n\r\nconst FIREBASE_API_KEY = 'AIzaSyDL75b9bD07bmPWk7eN7VsoDZitkHdPTus';\r\nconst FIREBASE_DB = 'https://to-do-trello.firebaseio.com/';\r\nconst debaunceTime = 600 * 1000;\r\nconst isExist = (obj) => typeof (obj) === 'object' && obj !== null && obj !== undefined;\r\nconst isTokenExpired = (res) => isExist(res) && res.error === 'Auth token is expired';\r\nlet isRefreshTokenCooldown = false;\r\nconst refreshToken = () => (dispatch, getState) => {\r\n  if (isRefreshTokenCooldown) return;\r\n\r\n  isRefreshTokenCooldown = true;\r\n\r\n  setTimeout(() => {\r\n    isRefreshTokenCooldown = false;\r\n  }, debaunceTime);\r\n  const { refreshToken } = getState().user;\r\n  fetch(`https://securetoken.googleapis.com/v1/token?key=${FIREBASE_API_KEY}`, {\r\n    method: 'POST',\r\n    'Content-Type': 'application.json',\r\n    body: JSON.stringify({\r\n      grant_type: 'refresh_token',\r\n      refresh_token: refreshToken,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      dispatch(setUserToken(res.id_token));\r\n      dispatch(setUserRefreshToken(res.efresh_token));\r\n      dispatch(fetchTasks());\r\n      dispatch(fetchLists());\r\n      dispatch(fetchBoards());\r\n    });\r\n};\r\n\r\nexport const registerUser = ({ email, password }) => (dispatch) => {\r\n  fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${FIREBASE_API_KEY}`, {\r\n    method: 'POST',\r\n    'Content-Type': 'application/json',\r\n    body: JSON.stringify({\r\n      email, password,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then(({ idToken, localId, refreshToken }) => {\r\n      dispatch(setUserToken(idToken));\r\n      dispatch(setUserRefreshToken(refreshToken));\r\n      dispatch(setUserId(localId));\r\n    });\r\n};\r\n\r\n\r\nexport const loginUser = ({ email, password }) => (dispatch) => {\r\n  fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${FIREBASE_API_KEY}`, {\r\n    method: 'POST',\r\n    'Content-Type': 'application/json',\r\n    body: JSON.stringify({\r\n      email, password, returnSecureToken: true,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then(({ idToken, localId, refreshToken }) => {\r\n      dispatch(setUserToken(idToken));\r\n      dispatch(setUserRefreshToken(refreshToken));\r\n      dispatch(setUserId(localId));\r\n      dispatch(fetchTasks());\r\n      dispatch(fetchLists());\r\n      dispatch(fetchBoards());\r\n    });\r\n};\r\n\r\nexport const addTask = (payload) => (dispatch, getState) => {\r\n  const { id, token } = getState().user;\r\n  const { title, checked, listId } = payload;\r\n  const { temporaryId } = payload;\r\n  const taskBody = {\r\n    title,\r\n    checked,\r\n    listId,\r\n  };\r\n  fetch(`${FIREBASE_DB}users/${id}/tasks.json?auth=${token}`, {\r\n    method: 'POST',\r\n    'Content-Type': 'application/json',\r\n    body: JSON.stringify(taskBody),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res))\r\n    .then(({ name: id }) => dispatch(editTaskId({ newId: id, id: temporaryId })));\r\n};\r\n\r\nexport const addList = (payload) => (dispatch, getState) => {\r\n  const { id, token } = getState().user;\r\n  const { title, boardId } = payload;\r\n  const { temporaryId } = payload;\r\n  const listBody = {\r\n    title,\r\n    boardId,\r\n  };\r\n  fetch(`${FIREBASE_DB}users/${id}/lists.json?auth=${token}`, {\r\n    method: 'POST',\r\n    'Content-Type': 'application/json',\r\n    body: JSON.stringify(listBody),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res))\r\n    .then(({ name }) => dispatch(editListId({ listId: temporaryId, newId: name })));\r\n};\r\n\r\nexport const addBoard = (payload) => (dispatch, getState) => {\r\n  const { id, token } = getState().user;\r\n  const { title } = payload;\r\n  const { temporaryId } = payload;\r\n  const boardBody = {\r\n    title,\r\n  };\r\n  fetch(`${FIREBASE_DB}users/${id}/boards.json?auth=${token}`, {\r\n    method: 'POST',\r\n    'Content-Type': 'application/json',\r\n    body: JSON.stringify(boardBody),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res))\r\n    .then(({ name }) => dispatch(editBoardId({ boardId: temporaryId, newId: name })));\r\n};\r\n\r\nexport const removeTask = (payload) => (dispatch, getState) => {\r\n  const { id: taskId } = payload;\r\n  const { id, token } = getState().user;\r\n  fetch(`${FIREBASE_DB}users/${id}/tasks/${taskId}.json?auth=${token}`, {\r\n    method: 'DELETE',\r\n    'Content-Type': 'application/json',\r\n  });\r\n};\r\n\r\nexport const deleteTasks = (payload) => (dispatch, getState) => {\r\n  const { listId } = payload;\r\n  const { user, tasks } = getState();\r\n  const { id, token } = user;\r\n  const targetTasks = tasks.filter(([, task]) => task.listId === listId);\r\n  targetTasks.forEach(([taskId]) => {\r\n    fetch(`${FIREBASE_DB}users/${id}/tasks/${taskId}.json?auth=${token}`, {\r\n      method: 'DELETE',\r\n      'Content-Type': 'application/json',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res));\r\n  });\r\n};\r\n\r\nexport const removeList = (payload) => (dispatch, getState) => {\r\n  const { listId } = payload;\r\n  const { id, token } = getState().user;\r\n  fetch(`${FIREBASE_DB}users/${id}/lists/${listId}.json?auth=${token}`, {\r\n    method: 'DELETE',\r\n    'Content-Type': 'application/json',\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res))\r\n    .then(() => dispatch(deleteTasks({ listId })));\r\n};\r\n\r\nexport const removeBoard = (payload) => (dispatch, getState) => {\r\n  const { boardId } = payload;\r\n  const { id, token } = getState().user;\r\n  fetch(`${FIREBASE_DB}users/${id}/boards/${boardId}.json?auth=${token}`, {\r\n    method: 'DELETE',\r\n    'Content-Type': 'application/json',\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res));\r\n};\r\n\r\nexport const fetchTasks = () => (dispatch, getState) => {\r\n  const { id, token } = getState().user;\r\n  fetch(`${FIREBASE_DB}users/${id}/tasks.json?auth=${token}`, {\r\n    method: 'GET',\r\n    'Content-Type': 'application/json',\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res))\r\n    .then((res) => {\r\n      if (isExist(res)) dispatch(setTasks(Object.entries(res)));\r\n    });\r\n};\r\n\r\nexport const fetchLists = () => (dispatch, getState) => {\r\n  const { id, token } = getState().user;\r\n  fetch(`${FIREBASE_DB}users/${id}/lists.json?auth=${token}`, {\r\n    method: 'GET',\r\n    'Content-Type': 'application/json',\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res))\r\n    .then((res) => {\r\n      if (isExist(res)) dispatch(setLists(Object.entries(res)));\r\n    });\r\n};\r\n\r\nexport const fetchBoards = () => (dispatch, getState) => {\r\n  const { id, token } = getState().user;\r\n  fetch(`${FIREBASE_DB}users/${id}/boards.json?auth=${token}`, {\r\n    method: 'GET',\r\n    'Content-Type': 'application/json',\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res))\r\n    .then((res) => {\r\n      if (isExist(res)) dispatch(setBoards(Object.entries(res)));\r\n    });\r\n};\r\n\r\nexport const fetchTask = (payload) => (dispatch, getState) => {\r\n  const { taskId } = payload;\r\n  const { user } = getState();\r\n  const { id, token } = user;\r\n  fetch(`${FIREBASE_DB}users/${id}/tasks/${taskId}.json?auth=${token}`, {\r\n    method: 'GET',\r\n    'Content-Type': 'application/json',\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res))\r\n    .then((res) => {\r\n      if (isExist(res)) dispatch(setCurrentTask(res));\r\n    });\r\n};\r\n\r\nexport const fetchList = (payload) => (dispatch, getState) => {\r\n  const { listId } = payload;\r\n  const { user } = getState();\r\n  const { id, token } = user;\r\n  fetch(`${FIREBASE_DB}users/${id}/lists/${listId}.json?auth=${token}`, {\r\n    method: 'GET',\r\n    'Content-Type': 'application/json',\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res))\r\n    .then((res) => {\r\n      if (isExist(res)) dispatch(setCurrentList(res));\r\n    });\r\n};\r\n\r\nexport const checkTask = (payload) => (dispatch, getState) => {\r\n  const { id: taskId } = payload;\r\n  const { user, tasks } = getState();\r\n  const { id, token } = user;\r\n  const targetTask = tasks.find((task) => task[0] === taskId);\r\n  const targetTaskCheckedStatus = targetTask[1].checked;\r\n  fetch(`${FIREBASE_DB}users/${id}/tasks/${taskId}.json?auth=${token}`, {\r\n    method: 'PATCH',\r\n    'Content-Type': 'application/json',\r\n    body: JSON.stringify({\r\n      checked: !targetTaskCheckedStatus,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res));\r\n};\r\n\r\nexport const moveTask = (payload) => (dispatch, getState) => {\r\n  const { listId, itemId: taskId } = payload;\r\n  const { user } = getState();\r\n  const { id, token } = user;\r\n  fetch(`${FIREBASE_DB}users/${id}/tasks/${taskId}.json?auth=${token}`, {\r\n    method: 'PATCH',\r\n    'Content-Type': 'application/json',\r\n    body: JSON.stringify({\r\n      listId,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res));\r\n};\r\n\r\nexport const editTaskTitle = (payload) => (dispatch, getState) => {\r\n  const { title, id: taskId } = payload;\r\n  const { user } = getState();\r\n  const { id, token } = user;\r\n  fetch(`${FIREBASE_DB}users/${id}/tasks/${taskId}.json?auth=${token}`, {\r\n    method: 'PATCH',\r\n    'Content-Type': 'application/json',\r\n    body: JSON.stringify({\r\n      title,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res));\r\n};\r\n\r\nexport const editListTitle = (payload) => (dispatch, getState) => {\r\n  const { title, listId } = payload;\r\n  const { user } = getState();\r\n  const { id, token } = user;\r\n  fetch(`${FIREBASE_DB}users/${id}/lists/${listId}.json?auth=${token}`, {\r\n    method: 'PATCH',\r\n    'Content-Type': 'application/json',\r\n    body: JSON.stringify({\r\n      title,\r\n    }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => (isTokenExpired(res) ? dispatch(refreshToken()) : res));\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './button.css';\r\n\r\nconst Button = ({\r\n  children, onClick, className, invert,\r\n}) => {\r\n  const classes = classNames(\r\n    'btn',\r\n    { invert },\r\n    className,\r\n  );\r\n  return (\r\n    <button className={classes} type=\"button\" onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.node,\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  invert: PropTypes.bool,\r\n  className: PropTypes.string,\r\n};\r\n\r\nButton.defaultProps = {\r\n  invert: false,\r\n  className: '',\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './todo-header.css';\r\n\r\nconst isSmallScreen = window.innerWidth < 375;\r\nconst small = isSmallScreen ? 'small' : '';\r\nconst Header = ({ children }) => (\r\n  <div className={`to-do-header ${small}`}>\r\n    {children}\r\n  </div>\r\n\r\n);\r\n\r\nHeader.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  children: null,\r\n};\r\n\r\nexport default Header;\r\n","export default {\r\n  ITEM: 'Item',\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nimport ItemTypes from '../../ItemTypes';\r\n\r\nimport './todo-item.css';\r\n\r\nconst ToDoItem = ({\r\n  title, id, checked, checkTask, removeTask, onTaskClick,\r\n}) => {\r\n  const classes = classNames(\r\n    'to-do-item',\r\n    { checked },\r\n  );\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { itemId: id, type: ItemTypes.ITEM },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n  const style = isDragging ? {\r\n    opacity: 0.7,\r\n  } : {};\r\n  return (\r\n    <div className={classes} ref={drag} style={style}>\r\n      <button className=\"to-do-item-check\" type=\"button\" onClick={() => checkTask({ id })}>check task</button>\r\n      <button className=\"to-do-item-text\" type=\"button\" onClick={() => onTaskClick(id)}>{title}</button>\r\n      <button className=\"to-do-item-delete\" type=\"button\" onClick={() => removeTask({ id })}>&#215;</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nToDoItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  checkTask: PropTypes.func.isRequired,\r\n  removeTask: PropTypes.func.isRequired,\r\n  onTaskClick: PropTypes.func.isRequired,\r\n  title: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n};\r\n\r\nToDoItem.defaultProps = {\r\n  title: 'Title',\r\n  checked: false,\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDrop } from 'react-dnd';\r\n\r\nimport ToDoItem from './todo-item';\r\nimport Button from '../button/button';\r\n\r\nimport ItemTypes from '../../ItemTypes';\r\nimport './todo-list.css';\r\n\r\nconst isSmallScreen = window.innerWidth < 375;\r\nconst small = isSmallScreen ? 'small' : '';\r\n\r\nconst ToDoList = ({\r\n  listId, title, tasks,\r\n  onAddTask, removeTask, removeList, checkTask, onItemDrop, onTaskClick, onOpenListInfo,\r\n}) => {\r\n  const [{ canDrop, isOver }, drop] = useDrop({\r\n    accept: ItemTypes.ITEM,\r\n    drop: (item) => onItemDrop(item, listId),\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop(),\r\n    }),\r\n  });\r\n  const plusBackground = (canDrop && isOver) ? '#32EB40' : 'gray';\r\n  return (\r\n    <div className={`to-do-list ${small}`} key={listId} ref={drop}>\r\n      <h3 className=\"to-do-list-title\">{title}</h3>\r\n      <button className=\"to-do-list-info-btn\" type=\"button\" onClick={() => onOpenListInfo(listId)}>&#9998;</button>\r\n      <div className=\"to-do-list-buttons\">\r\n        <Button className=\"to-do-add-task\" onClick={() => onAddTask(listId)}>add task</Button>\r\n        <Button className=\"to-do-remove-list\" invert onClick={() => removeList(listId)}>remove list</Button>\r\n      </div>\r\n      {tasks.filter(([, task]) => task.listId === listId).map(([id, { title, checked }]) => (\r\n        <ToDoItem\r\n          id={id}\r\n          title={title}\r\n          key={id}\r\n          checked={checked}\r\n          removeTask={removeTask}\r\n          checkTask={checkTask}\r\n          onTaskClick={onTaskClick}\r\n        />\r\n      ))}\r\n      {canDrop\r\n        && <div className=\"to-do-can-drop-item\" style={{ background: plusBackground }} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nToDoList.propTypes = {\r\n  listId: PropTypes.string.isRequired,\r\n  tasks: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n  ]))).isRequired,\r\n  onAddTask: PropTypes.func.isRequired,\r\n  removeTask: PropTypes.func.isRequired,\r\n  removeList: PropTypes.func.isRequired,\r\n  checkTask: PropTypes.func.isRequired,\r\n  onItemDrop: PropTypes.func.isRequired,\r\n  onTaskClick: PropTypes.func.isRequired,\r\n  onOpenListInfo: PropTypes.func.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nToDoList.defaultProps = {\r\n  title: 'Title is not defined',\r\n};\r\n\r\nexport default ToDoList;\r\n","import { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Portal extends Component {\r\n  constructor() {\r\n    super();\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return ReactDOM.createPortal(children, this.el);\r\n  }\r\n}\r\n\r\nPortal.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Portal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Portal from '../portal/portal';\r\n\r\nimport './modal.css';\r\n\r\nconst Modal = ({\r\n  children, accepting, onAccept, onCancel, isOpen,\r\n}) => {\r\n  const handleWrapperClick = (e) => {\r\n    e.persist();\r\n    const isWrapper = e.target.className.indexOf('modal-wrapper') !== -1;\r\n    if (isWrapper) onCancel();\r\n  };\r\n  return (\r\n    <>\r\n      {isOpen\r\n        && (\r\n        <Portal>\r\n          <div className=\"modal-wrapper\" onClick={handleWrapperClick}>\r\n            <div className=\"modal\">\r\n              <button className=\"modal-close-btn\" type=\"button\" onClick={onCancel}>X</button>\r\n              <div className=\"modal-inner\">\r\n                {children}\r\n              </div>\r\n              {accepting\r\n                && (\r\n                <>\r\n                  <button className=\"modal-accept\" type=\"button\" onClick={onAccept}>accept</button>\r\n                  <button className=\"modal-define\" type=\"button\" onClick={onCancel}>cancel</button>\r\n                </>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </Portal>\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onAccept: PropTypes.func,\r\n  onCancel: PropTypes.func,\r\n  accepting: PropTypes.bool,\r\n};\r\n\r\nModal.defaultProps = {\r\n  accepting: false,\r\n  onAccept: () => {},\r\n  onCancel: () => {},\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../modal/modal';\r\n\r\nimport './modal-add-list.css';\r\n\r\nconst ModalAddList = ({ isOpen, onAccept, onCancel }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = ({ target: { value } }) => setInputValue(value);\r\n  const clearModal = () => setInputValue('');\r\n  const handleClick = () => {\r\n    onAccept(inputValue);\r\n    onCancel();\r\n    clearModal();\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onCancel={onCancel}>\r\n      <div className=\"modal-add-list\">\r\n        <input type=\"text\" className=\"input-title\" value={inputValue} onChange={handleInputChange} />\r\n        <button className=\"modal-add-list-btn\" type=\"button\" onClick={handleClick}>add</button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalAddList.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onAccept: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n};\r\n\r\nModalAddList.defaultProps = {\r\n  isOpen: false,\r\n};\r\n\r\nexport default ModalAddList;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from '../modal/modal';\r\n\r\nimport './modal-add-task.css';\r\n\r\nconst ModalAddTask = ({ isOpen, onAccept, onCancel }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = ({ target: { value } }) => setInputValue(value);\r\n  const clearModal = () => setInputValue('');\r\n  const handleClick = () => {\r\n    onAccept(inputValue);\r\n    onCancel();\r\n    clearModal();\r\n  };\r\n\r\n  return (\r\n    <Modal onCancel={onCancel} isOpen={isOpen}>\r\n      <div className=\"modal-add-task\">\r\n        <div className=\"add-task-form\">\r\n          <input type=\"text\" className=\"add-task-title\" value={inputValue} onChange={handleInputChange} />\r\n          <button className=\"modal-add-task-btn\" type=\"button\" onClick={handleClick}>add</button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalAddTask.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onAccept: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n};\r\n\r\nModalAddTask.defaultProps = {\r\n  isOpen: false,\r\n};\r\n\r\nexport default ModalAddTask;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from '../modal/modal';\r\n\r\nimport './modal-add-board.css';\r\n\r\nconst ModalAddBoard = ({ isOpen, onAccept, onCancel }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = ({ target: { value } }) => setInputValue(value);\r\n  const clearModal = () => setInputValue('');\r\n  const handleClick = () => {\r\n    onAccept(inputValue);\r\n    onCancel();\r\n    clearModal();\r\n  };\r\n\r\n  return (\r\n    <Modal onCancel={onCancel} isOpen={isOpen}>\r\n      <div className=\"modal-add-board\">\r\n        <div className=\"add-board-form\">\r\n          <input type=\"text\" className=\"add-board-title\" value={inputValue} onChange={handleInputChange} />\r\n          <button className=\"modal-add-board-btn\" type=\"button\" onClick={handleClick}>add</button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalAddBoard.propTypes = {\r\n  isOpen: PropTypes.bool,\r\n  onAccept: PropTypes.func.isRequired,\r\n  onCancel: PropTypes.func.isRequired,\r\n};\r\n\r\nModalAddBoard.defaultProps = {\r\n  isOpen: false,\r\n};\r\n\r\nexport default ModalAddBoard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from '../modal/modal';\r\n\r\nconst ModalTaskInfo = ({\r\n  isOpen, taskId, onClose, onEditTitle, fetchTask, currentTask,\r\n}) => {\r\n  const [title, setTitle] = useState(null);\r\n  useEffect(() => {\r\n    if (taskId) {\r\n      fetchTask({ taskId });\r\n    }\r\n  }, [taskId]);\r\n  useEffect(() => {\r\n    if (currentTask) {\r\n      setTitle(currentTask.title);\r\n    }\r\n  }, [currentTask]);\r\n  const handleInputChange = ({ target: { value } }) => setTitle(value);\r\n  const clearModal = () => setTitle('');\r\n  const handleClick = () => {\r\n    onEditTitle({ id: taskId, title });\r\n    onClose();\r\n    clearModal();\r\n  };\r\n  return (\r\n    <Modal isOpen={isOpen} onCancel={onClose}>\r\n      <div className=\"modal-task-info\">\r\n        <div className=\"task-info\">\r\n          <input className=\"task-title\" onChange={handleInputChange} value={title || ''} />\r\n          <button className=\"task-title-edit\" type=\"button\" onClick={handleClick}>edit</button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalTaskInfo.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n  taskId: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]).isRequired,\r\n  onEditTitle: PropTypes.func.isRequired,\r\n  fetchTask: PropTypes.func.isRequired,\r\n  currentTask: PropTypes.objectOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n    PropTypes.bool,\r\n  ])).isRequired,\r\n};\r\n\r\nexport default ModalTaskInfo;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from '../modal/modal';\r\n\r\nconst ModalListInfo = ({\r\n  isOpen, listId, onClose, onEditTitle, currentList, fetchList,\r\n}) => {\r\n  const [title, setTitle] = useState('');\r\n  useEffect(() => {\r\n    if (listId) {\r\n      fetchList({ listId });\r\n    }\r\n  }, [listId]);\r\n  useEffect(() => {\r\n    if (currentList) {\r\n      setTitle(currentList.title);\r\n    }\r\n  }, [currentList]);\r\n  const handleInputChange = ({ target: { value } }) => setTitle(value);\r\n  const clearModal = () => setTitle('');\r\n  const handleClick = () => {\r\n    onEditTitle({ listId, title });\r\n    onClose();\r\n    clearModal();\r\n  };\r\n  return (\r\n    <Modal isOpen={isOpen} onCancel={onClose}>\r\n      <div className=\"modal-list-info\">\r\n        <div className=\"list-info\">\r\n          <input className=\"list-title\" onChange={handleInputChange} value={title || ''} />\r\n          <button className=\"list-title-edit\" type=\"button\" onClick={handleClick}>edit</button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalListInfo.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  listId: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ]).isRequired,\r\n  onEditTitle: PropTypes.func.isRequired,\r\n  currentList: PropTypes.objectOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ])).isRequired,\r\n  fetchList: PropTypes.func.isRequired,\r\n  isOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ModalListInfo;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from '../modal/modal';\r\n\r\nconst ModalSignUp = ({ isOpen, onClose, onSubmit }) => {\r\n  const [inputEmail, setInputEmail] = useState('');\r\n  const [inputPass, setInputPass] = useState('');\r\n  const [inputRePass, setInputRePass] = useState('');\r\n\r\n  const handleInputEmailChange = ({ target: { value } }) => setInputEmail(value);\r\n  const handleInputPassChange = ({ target: { value } }) => setInputPass(value);\r\n  const handleInputRePassChange = ({ target: { value } }) => setInputRePass(value);\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputPass === inputRePass && inputEmail && inputPass.length > 5) {\r\n      onSubmit({ email: inputEmail, password: inputPass });\r\n    } else alert('Пароли не совпадают или данные не введены или пароль меньше 6 символов.');\r\n    onClose();\r\n  };\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onCancel={onClose}\r\n    >\r\n      <form className=\"to-do-sign-up-form\" onSubmit={handleFormSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          className=\"to-do-sign-up-form-email\"\r\n          placeholder=\"email\"\r\n          value={inputEmail}\r\n          onChange={handleInputEmailChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"to-do-sign-up-from-pass\"\r\n          placeholder=\"password\"\r\n          value={inputPass}\r\n          onChange={handleInputPassChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"to-do-sign-up-from-re-pass\"\r\n          placeholder=\"repeat password\"\r\n          value={inputRePass}\r\n          onChange={handleInputRePassChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"to-do-sign-up-from-submit\"\r\n          value=\"sign up\"\r\n        />\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalSignUp.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalSignUp;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Modal from '../modal/modal';\r\n\r\nconst ModalLogIn = ({ isOpen, onClose, onSubmit }) => {\r\n  const [inputEmail, setInputEmail] = useState('');\r\n  const [inputPass, setInputPass] = useState('');\r\n\r\n  const handleInputEmailChange = ({ target: { value } }) => setInputEmail(value);\r\n  const handleInputPassChange = ({ target: { value } }) => setInputPass(value);\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputEmail && inputPass) {\r\n      onSubmit({ email: inputEmail, password: inputPass });\r\n    }\r\n    onClose();\r\n  };\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onCancel={onClose}\r\n    >\r\n      <form className=\"to-do-log-in-form\" onSubmit={handleFormSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          className=\"to-do-log-in-form-email\"\r\n          placeholder=\"email\"\r\n          value={inputEmail}\r\n          onChange={handleInputEmailChange}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          className=\"to-do-log-in-from-pass\"\r\n          placeholder=\"password\"\r\n          value={inputPass}\r\n          onChange={handleInputPassChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"to-do-log-in-from-submit\"\r\n          value=\"log in\"\r\n        />\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nModalLogIn.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ModalLogIn;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './boards-list.css';\r\n\r\nconst BoardsList = ({\r\n  boards, setCurrentBoard, onAddBoard, onDeleteBoard,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleIsOpen = () => setIsOpen(!isOpen);\r\n  const handleWrapperClick = (e) => {\r\n    e.persist();\r\n    if (e.target.className.indexOf('boards-list-wrapper') !== -1) toggleIsOpen();\r\n  };\r\n  const opened = isOpen ? 'opened' : '';\r\n  const isSmallScreen = window.innerWidth < 375;\r\n  const hidden = isSmallScreen && !isOpen ? 'hidden' : '';\r\n  return (\r\n    <div className={`boards-list-wrapper ${opened}`} onClick={handleWrapperClick}>\r\n      <div className=\"borads-list\">\r\n        <button className=\"board-toggle-btn board-btn board-item\" type=\"submit\" onClick={toggleIsOpen}>\r\n          <div className=\"burger\">\r\n            <span className=\"burger__line\" />\r\n            <span className=\"burger__line\" />\r\n            <span className=\"burger__line\" />\r\n          </div>\r\n        </button>\r\n        <div className={`board-items ${hidden}`}>\r\n          <button className=\"board-item board-btn\" key=\"all\" type=\"submit\" onClick={() => setCurrentBoard(0)}>all</button>\r\n          {boards && boards.map(([boardId, { title }], index) => (\r\n            <div className=\"board-item\" key={boardId}>\r\n              <button className={`board-item-btn board-btn ${opened}`} type=\"submit\" onClick={() => setCurrentBoard(boardId)}>\r\n                {isOpen\r\n                  ? (\r\n                    <>\r\n                      <span className=\"board-btn-num\">\r\n                        {index + 1}\r\n                        .\r\n                      </span>\r\n                      <span>\r\n                        {title}\r\n                      </span>\r\n                    </>\r\n                  )\r\n                  : index + 1}\r\n              </button>\r\n              <button className=\"board-delete-btn board-btn\" type=\"submit\" onClick={() => onDeleteBoard({ boardId })}>del</button>\r\n            </div>\r\n          ))}\r\n          <button className=\"boards-list-button board-btn board-item\" key=\"add\" type=\"submit\" onClick={onAddBoard}>+</button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nBoardsList.propTypes = {\r\n  setCurrentBoard: PropTypes.func.isRequired,\r\n  onAddBoard: PropTypes.func.isRequired,\r\n  onDeleteBoard: PropTypes.func.isRequired,\r\n  boards: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n  ]))).isRequired,\r\n};\r\n\r\nexport default BoardsList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  addTaskLocal,\r\n  removeTaskLocal,\r\n  moveTaskLocal,\r\n  deleteTasksLocal,\r\n  checkTaskLocal,\r\n  editTaskTitleLocal,\r\n  addListLocal,\r\n  removeListLocal,\r\n  editListTitleLocal,\r\n  addBoardLocal,\r\n  removeBoardLocal,\r\n  logoutUser,\r\n} from '../../actions/actionCreator';\r\nimport {\r\n  registerUser,\r\n  loginUser,\r\n  addTask, removeTask, checkTask, fetchTasks,\r\n  addList, removeList, fetchLists,\r\n  addBoard, removeBoard, fetchBoards,\r\n  moveTask,\r\n  fetchTask,\r\n  fetchList,\r\n  editTaskTitle,\r\n  editListTitle,\r\n} from '../../utilities/api';\r\n\r\n// components imports\r\nimport Button from '../button/button';\r\n\r\n// local imports\r\nimport ToDoHeader from './todo-header';\r\nimport ToDoList from './todo-list';\r\nimport ModalAddList from './modal-add-list';\r\nimport ModalAddTask from './modal-add-task';\r\nimport ModalAddBoard from './modal-add-board';\r\nimport ModalTaskInfo from './modal-task-info';\r\nimport ModalListInfo from './modal-list-info';\r\nimport ModalSignUp from './modal-sign-up';\r\nimport ModalLogIn from './modal-log-in';\r\nimport BoardsList from './boards-list';\r\n\r\nimport './todo.css';\r\n\r\nconst isSmallScreen = window.innerWidth < 375;\r\nconst small = isSmallScreen ? 'small' : '';\r\n\r\nconst ToDo = (props) => {\r\n  // data destructuring\r\n  const {\r\n    lists, tasks, boards, user,\r\n  } = props;\r\n  // tasks functions distructuring\r\n  const {\r\n    addTask,\r\n    removeTask,\r\n    checkTask,\r\n    moveTask,\r\n    editTaskTitle,\r\n    fetchTasks,\r\n    addTaskLocal,\r\n    removeTaskLocal,\r\n    checkTaskLocal,\r\n    moveTaskLocal,\r\n    editTaskTitleLocal,\r\n    currentTask,\r\n  } = props;\r\n  // lists functions distructuring\r\n  const {\r\n    addList,\r\n    removeList,\r\n    editListTitle,\r\n    fetchLists,\r\n    fetchList,\r\n    currentList,\r\n    addListLocal,\r\n    removeListLocal,\r\n    editListTitleLocal,\r\n  } = props;\r\n  // boards functions distructuring\r\n  const {\r\n    addBoardLocal,\r\n    removeBoardLocal,\r\n    addBoard,\r\n    removeBoard,\r\n    fetchBoards,\r\n    fetchTask,\r\n  } = props;\r\n  // user functions distructuring\r\n  const { registerUser, loginUser, logoutUser } = props;\r\n\r\n  const [isOpenModalAddList, setIsOpenModalAddList] = useState(false);\r\n  const [isOpenModalAddTask, setIsOpenModalAddTask] = useState(false);\r\n  const [isOpenModalAddBoard, setIsOpenModalAddBoard] = useState(false);\r\n  const [isOpenModalTaskInfo, setIsOpenModalTaskInfo] = useState(false);\r\n  const [isOpenModalListInfo, setIsOpenModalListInfo] = useState(false);\r\n  const [isOpenModalSignUp, setIsOpenModalSignUp] = useState(false);\r\n  const [isOpenModalLogIn, setIsOpenModalLogIn] = useState(false);\r\n  const [currentTaskId, setCurrentTaskId] = useState(0);\r\n  const [currentListId, setCurrentListId] = useState(0);\r\n  const [currentBoard, setCurrentBoard] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    fetchLists();\r\n    fetchBoards();\r\n  }, []);\r\n\r\n  const toggleModalAddListView = () => setIsOpenModalAddList(!isOpenModalAddList);\r\n  const toggleModalAddTaskView = () => setIsOpenModalAddTask(!isOpenModalAddTask);\r\n  const toggleModalAddBoardView = () => setIsOpenModalAddBoard(!isOpenModalAddBoard);\r\n  const toggleModalTaskInfoView = () => setIsOpenModalTaskInfo(!isOpenModalTaskInfo);\r\n  const toggleModalListInfoView = () => setIsOpenModalListInfo(!isOpenModalListInfo);\r\n  const toggleModalSignUpView = () => setIsOpenModalSignUp(!isOpenModalSignUp);\r\n  const toggleModalLogInView = () => setIsOpenModalLogIn(!isOpenModalLogIn);\r\n  const setItemListId = ({ itemId }, listId) => {\r\n    const payload = {\r\n      itemId,\r\n      listId,\r\n    };\r\n    moveTask(payload);\r\n    moveTaskLocal(payload);\r\n  };\r\n  const handleItemDrop = (item, listId) => setItemListId(item, listId);\r\n  const handleAddTask = (listId) => {\r\n    toggleModalAddTaskView();\r\n    setCurrentListId(listId);\r\n  };\r\n  const handleAddBoard = () => {\r\n    toggleModalAddBoardView();\r\n  };\r\n  const handleRemoveList = (listId) => {\r\n    removeList({ listId });\r\n    removeListLocal({ listId });\r\n  };\r\n  const handleListModalAccept = (title) => {\r\n    // Генерирует временный id который изменится после добавления списка в бд\r\n    const listId = String(Date.now());\r\n    const payload = {\r\n      title,\r\n      boardId: currentBoard,\r\n    };\r\n\r\n    addList({ ...payload, temporaryId: listId });\r\n    addListLocal({ ...payload, listId });\r\n  };\r\n  const handleTaskModalAccept = (title) => {\r\n    // Генерирует временный id который изменится после добавления таски в бд\r\n    const id = String(Date.now());\r\n    const payload = {\r\n      listId: currentListId,\r\n      checked: false,\r\n      title,\r\n    };\r\n    addTask({ ...payload, temporaryId: id });\r\n    addTaskLocal({ ...payload, id });\r\n  };\r\n  const handleRemoveTask = (payload) => {\r\n    removeTask(payload);\r\n    removeTaskLocal(payload);\r\n  };\r\n  const handleBoardModalAccept = (title) => {\r\n    // Генерирует временный id который изменится после добавления доски в бд\r\n    const id = String(Date.now());\r\n    const boardBody = {\r\n      title,\r\n    };\r\n    addBoardLocal({ ...boardBody, boardId: id });\r\n    addBoard({ ...boardBody, temporaryId: id });\r\n  };\r\n  const handleTaskClick = (id) => {\r\n    setCurrentTaskId(id);\r\n    toggleModalTaskInfoView();\r\n  };\r\n  const handleOpenListInfo = (id) => {\r\n    setCurrentListId(id);\r\n    toggleModalListInfoView();\r\n  };\r\n  const handleCheckTask = (payload) => {\r\n    checkTask(payload);\r\n    checkTaskLocal(payload);\r\n  };\r\n  const handleEditTaskTitle = (payload) => {\r\n    editTaskTitle(payload);\r\n    editTaskTitleLocal(payload);\r\n  };\r\n  const handleEditListTitle = (payload) => {\r\n    editListTitle(payload);\r\n    editListTitleLocal(payload);\r\n  };\r\n  const handleRemoveBoard = (payload) => {\r\n    removeBoard(payload);\r\n    removeBoardLocal(payload);\r\n  };\r\n  const handleSignUpSubmit = (payload) => registerUser(payload);\r\n  const handleLogInSubmit = (payload) => loginUser(payload);\r\n  const handleCloseModalTaskInfo = () => toggleModalTaskInfoView();\r\n  const handleCloseModalListInfo = () => toggleModalListInfoView();\r\n  const handleCloseModalSignUp = () => toggleModalSignUpView();\r\n  const handleCloseModalLogIn = () => toggleModalLogInView();\r\n  const handleLogOut = () => {\r\n    logoutUser();\r\n    fetchTasks();\r\n    fetchLists();\r\n    fetchBoards();\r\n  };\r\n  const isLogged = user.token !== '';\r\n  return (\r\n    <div className=\"to-do-app\">\r\n      <BoardsList\r\n        boards={boards}\r\n        onAddBoard={handleAddBoard}\r\n        onDeleteBoard={handleRemoveBoard}\r\n        setCurrentBoard={setCurrentBoard}\r\n      />\r\n      <div className=\"content\">\r\n        <ToDoHeader>\r\n          <div className=\"todo-btns\">\r\n            <Button className=\"to-do-add-list\" onClick={toggleModalAddListView}>add list</Button>\r\n            <div className=\"auth-btns\">\r\n              {!isLogged\r\n                && <Button className=\"to-do-log-in\" onClick={toggleModalLogInView}>Log In</Button>}\r\n              {!isLogged\r\n                && <Button className=\"to-do-sign-up\" onClick={toggleModalSignUpView}>Sign Up</Button>}\r\n              {isLogged\r\n                && <Button className=\"to-do-log-out\" onClick={handleLogOut}>Log Out</Button>}\r\n            </div>\r\n          </div>\r\n        </ToDoHeader>\r\n        <div className={`to-do-app-lists ${small}`}>\r\n          {lists.filter(([, list]) => currentBoard === 0 || list.boardId === currentBoard)\r\n            .map(([listId, { title }]) => (\r\n              <ToDoList\r\n                key={listId}\r\n                listId={listId}\r\n                title={title}\r\n                tasks={tasks}\r\n                removeList={handleRemoveList}\r\n                onAddTask={handleAddTask}\r\n                checkTask={handleCheckTask}\r\n                removeTask={handleRemoveTask}\r\n                onItemDrop={handleItemDrop}\r\n                onTaskClick={handleTaskClick}\r\n                onOpenListInfo={handleOpenListInfo}\r\n              />\r\n            ))}\r\n        </div>\r\n        <ModalAddList\r\n          isOpen={isOpenModalAddList}\r\n          onAccept={handleListModalAccept}\r\n          onCancel={toggleModalAddListView}\r\n        />\r\n        <ModalAddTask\r\n          isOpen={isOpenModalAddTask}\r\n          onAccept={handleTaskModalAccept}\r\n          onCancel={toggleModalAddTaskView}\r\n        />\r\n        <ModalAddBoard\r\n          isOpen={isOpenModalAddBoard}\r\n          onAccept={handleBoardModalAccept}\r\n          onCancel={toggleModalAddBoardView}\r\n        />\r\n        <ModalTaskInfo\r\n          isOpen={isOpenModalTaskInfo}\r\n          taskId={currentTaskId}\r\n          tasks={tasks}\r\n          onClose={handleCloseModalTaskInfo}\r\n          onEditTitle={handleEditTaskTitle}\r\n          fetchTask={fetchTask}\r\n          currentTask={currentTask}\r\n        />\r\n        <ModalListInfo\r\n          isOpen={isOpenModalListInfo}\r\n          listId={currentListId}\r\n          lists={lists}\r\n          onClose={handleCloseModalListInfo}\r\n          onEditTitle={handleEditListTitle}\r\n          fetchList={fetchList}\r\n          currentList={currentList}\r\n        />\r\n        <ModalSignUp\r\n          isOpen={isOpenModalSignUp}\r\n          onClose={handleCloseModalSignUp}\r\n          onSubmit={handleSignUpSubmit}\r\n        />\r\n        <ModalLogIn\r\n          isOpen={isOpenModalLogIn}\r\n          onClose={handleCloseModalLogIn}\r\n          onSubmit={handleLogInSubmit}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nToDo.propTypes = {\r\n  //  data prop types\r\n  lists: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n  ]))).isRequired,\r\n  tasks: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n  ]))).isRequired,\r\n  boards: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object,\r\n  ]))).isRequired,\r\n  user: PropTypes.objectOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ])).isRequired,\r\n  // functions prop types\r\n  addTask: PropTypes.func.isRequired,\r\n  removeTask: PropTypes.func.isRequired,\r\n  checkTask: PropTypes.func.isRequired,\r\n  moveTask: PropTypes.func.isRequired,\r\n  editTaskTitle: PropTypes.func.isRequired,\r\n  fetchTasks: PropTypes.func.isRequired,\r\n  addTaskLocal: PropTypes.func.isRequired,\r\n  removeTaskLocal: PropTypes.func.isRequired,\r\n  checkTaskLocal: PropTypes.func.isRequired,\r\n  moveTaskLocal: PropTypes.func.isRequired,\r\n  editTaskTitleLocal: PropTypes.func.isRequired,\r\n  addList: PropTypes.func.isRequired,\r\n  removeList: PropTypes.func.isRequired,\r\n  editListTitle: PropTypes.func.isRequired,\r\n  fetchLists: PropTypes.func.isRequired,\r\n  fetchList: PropTypes.func.isRequired,\r\n  addListLocal: PropTypes.func.isRequired,\r\n  removeListLocal: PropTypes.func.isRequired,\r\n  editListTitleLocal: PropTypes.func.isRequired,\r\n  addBoardLocal: PropTypes.func.isRequired,\r\n  removeBoardLocal: PropTypes.func.isRequired,\r\n  addBoard: PropTypes.func.isRequired,\r\n  removeBoard: PropTypes.func.isRequired,\r\n  fetchBoards: PropTypes.func.isRequired,\r\n  fetchTask: PropTypes.func.isRequired,\r\n  registerUser: PropTypes.func.isRequired,\r\n  loginUser: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  //  other prop types\r\n  currentList: PropTypes.objectOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n  ])).isRequired,\r\n  currentTask: PropTypes.objectOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number,\r\n    PropTypes.bool,\r\n  ])).isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({\r\n  lists, tasks, boards, user, currentTask, currentList,\r\n}) => ({\r\n  lists,\r\n  tasks,\r\n  boards,\r\n  user,\r\n  currentTask,\r\n  currentList,\r\n});\r\nconst mapTasksDispatchToProps = {\r\n  addTask,\r\n  removeTask,\r\n  checkTask,\r\n  moveTask,\r\n  deleteTasksLocal,\r\n  editTaskTitle,\r\n  addTaskLocal,\r\n  removeTaskLocal,\r\n  checkTaskLocal,\r\n  moveTaskLocal,\r\n  editTaskTitleLocal,\r\n  fetchTasks,\r\n  fetchTask,\r\n};\r\nconst mapListsDispatchToProps = {\r\n  addList,\r\n  removeList,\r\n  editListTitle,\r\n  addListLocal,\r\n  removeListLocal,\r\n  editListTitleLocal,\r\n  fetchList,\r\n  fetchLists,\r\n};\r\nconst mapBoardsDispatchToProps = {\r\n  addBoard,\r\n  removeBoard,\r\n  fetchBoards,\r\n  addBoardLocal,\r\n  removeBoardLocal,\r\n};\r\nconst mapOtherDispatchToProps = {\r\n  registerUser,\r\n  loginUser,\r\n  logoutUser,\r\n};\r\nconst mapDispatchToProps = {\r\n  ...mapTasksDispatchToProps,\r\n  ...mapListsDispatchToProps,\r\n  ...mapBoardsDispatchToProps,\r\n  ...mapOtherDispatchToProps,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDo);\r\n","import React from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport Backend from 'react-dnd-html5-backend';\r\n\r\nimport ToDo from './components/todo/todo';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <DndProvider backend={Backend}>\r\n        <ToDo />\r\n      </DndProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './store';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}